#!/bin/sh

. $HOME/.cache/wal/colors.sh

[ ! -f "$XDG_CONFIG_HOME/cfg/al" ] && mkdir -p "$XDG_CONFIG_HOME/cfg" && touch "$XDG_CONFIG_HOME/cfg/al"

refreshcfg() {
    wpg -s "$(wpg -c)"

    command -v openrgb >/dev/null &&
        sudo openrgb \
        -d 0 `# Left RAM Stick` \
            -c "$(echo $color14 | sed 's/#//')" -m Static \
        -d 1 `# Right RAM Stick` \
            -c "$(echo $color9 | sed 's/#//')" -m Static \
        -d 2 `# X570 Taichi` \
            `#-c ${color9:1} -m Neon \ ` \
            -m Random &

    lsusb | grep -q NZXT && 
        if liquidctl; then
            sudo liquidctl set led1 color starry-night "$(echo "$color14" | sed 's/#//')" &
            sudo liquidctl set led2 color starry-night "$(echo "$color11" | sed 's/#//')" &
        else
            openrgb -d 3 \
                -z 0 -c "$(echo "$color13" | sed 's/#//')" \
                -z 1 -c "$(echo "$color19" | sed 's/#//')" \
                -z 2 -c "$(echo "$color11" | sed 's/#//')" \
                -z 3 -c "$(echo "$color10" | sed 's/#//')" &
        fi

    lsusb | grep -q AMD &&
        wraith-master -m swirl -c "$color14" ring &&
        wraith-master -m static -c "$color11" logo &&
        wraith-master --mirage on fan &&
        wraith-master -c "$color9" fan &

    lsusb | grep -q Microdia && rgb_keyboard -c 000000 &
    lsusb | grep -q Razer && razerricer &
    [ "$(pgrep qutebrowser)" ] && qutebrowser :config-source &

    if [ "$WAYLAND_DISPLAY" ]; then
        sway restart &
    else
        i3 restart
        sleep 0.1
        i3 mode WINDOW
    fi

    cd ~/prg/st || exit
    sudo make clean install || exit
    cd ~/prg/dmenu || exit
    sudo make clean install || exit
    cd ~/prg/slock || exit
    sudo make clean install || exit
    wal_steam -g &
    pywalfox update &
    oomox-cli ~/.cache/wal/colors-oomox &
    # oomoxify-cli -s /opt/spotify/Apps ~/.cache/wal/colors-oomox
    pywal-discord
    sleep 1
    pywal-discord

    if pgrep spotify; then
        spicetify apply
        sleep 1
        playerctl -p spotify play
    else
        spicetify apply
        sleep 1
        killall -9 spotify
    fi
}


addcfg() {
    if [ ! "$3" ]; then
        echo "You can't add a config without an alias/path!"
        exit
    fi
    cfgalias=$3
    newcfg=$(readlink -f "$2")
    echo "$cfgalias $newcfg" >> "$XDG_CONFIG_HOME/cfg/al"
}

editcfg() {
    if [ -z "$2"  ]; then
        cfgfileloc="$(sed "s/~/\/home\/$USER/" "$XDG_CONFIG_HOME/cfg/al" | awk '{print $2}' | fzf)"
    else
        cfgfileloc="$(sed "s/~/\/home\/$USER/" "$XDG_CONFIG_HOME/cfg/al" | grep "^$2 " | awk '{print $2}')"
    fi

    cfgfilepostrun="$(grep "$(echo "$cfgfileloc" | sed "s/\/home\/$USER/~/")" "$XDG_CONFIG_HOME/cfg/al" | awk '{$1="";$2="";print}' | xargs)"

    # Only advance onto the post run command if the edit of the
    # file succeeds 
    # (ie. sudoedit without doing any actual editing or
    # editing a file that is already open in another instance)
    edit "$cfgfileloc" &&

    updatecfg

    [ -n "$cfgfilepostrun" ] && $SHELL -c "$cfgfilepostrun"
}

listcfg() {
    awk '{print $1 ; print $2}' "$XDG_CONFIG_HOME/cfg/al"
}

updatecfg() {
    cp /etc/pacman.conf "$XDG_CONFIG_HOME/root/etc/" || exit
    cp /etc/makepkg.conf "$XDG_CONFIG_HOME/root/etc/" || exit
    cp /etc/pulse/default.pa "$XDG_CONFIG_HOME/root/etc/pulse/" || exit
    cp /etc/sysctl.d -r "$XDG_CONFIG_HOME/root/etc/" || exit
    cp /etc/bluetooth -r "$XDG_CONFIG_HOME/root/etc/" || exit
    cp /etc/locale.gen "$XDG_CONFIG_HOME/root/etc/" || exit
    ( sudo cp /etc/sudoers "$XDG_CONFIG_HOME/root/etc/" && sudo chown -R ty:users "$XDG_CONFIG_HOME/root" ) || exit
    cp /etc/hostname "$XDG_CONFIG_HOME/root/etc/" || exit
    cp /etc/profile "$XDG_CONFIG_HOME/root/etc/" || exit
    git add -f "$XDG_CONFIG_HOME/root"

    git add -f ~/bin
    git add -f "$XDG_CONFIG_HOME/wpg/templates/*.base"
    pacman -Qeq > "$XDG_CONFIG_HOME/pkgs"
    git commit -a
    # git push
}

deletecfg() {
    path_to_del="$(fzf < "$XDG_CONFIG_HOME/cfg/al" | awk '{print $2}')"
    rm -i "$path_to_del" && sed -i "/$2/d"
}

case $1 in
    r|rf|re|refresh)
        refreshcfg
        ;;
    a|add)
        addcfg "$@"
        ;;
    e|ed|edit)
        editcfg "$@"
        ;;
    l|ls|list)
        listcfg
        ;;
    u|up|update)
        updatecfg
        ;;
    x|d|del|delete|rm)
        deletecfg "$@"
        ;;
    *)
        echo "\
cfg - the simple config controller

    r/rf/refresh - refresh all configs
        - cfg r
    
    a/add - add new config
        - cfg a (PATH TO CONFIG) (CONFIG ALIAS)
    
    e/ed/edit - edit existing config
        - cfg e
            - calls fzf
            OR
        - cfg e (CONFIG ALIAS)
    
    l/ls/list - list existing config aliases
        - cfg l

    l/ls/list - list existing config aliases
        - cfg l
    
    u/up/update - push to your main repo
        - cfg u

    x/d/rm/delete - delete a config file
    - cfg x
        - calls fzf
"
        ;;
esac
