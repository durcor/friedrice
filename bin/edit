#!/bin/sh
#
# Assumes your $EDITOR of choice is nvim
# Uses nvr (neovim-remote) to create new buffers for files within an existing nvim instance

[ $XDG_CONFIG_DIR ] || XDG_CONFIG_DIR=$HOME/.config

edit_with_nvim() {
    case $_ in
        */bin/sudo | */bin/systemctl) exec nvr --remote-tab-wait $@ ;;
    esac
    if [ "$NVIM" ]; then
        case $1 in
            /dev/shm/pass.* | $XDG_CONFIG_DIR/systemd/user/.#* | /tmp/vimv.*)
                exec nvr --remote-tab-wait $@
                ;;
            *)
                if [ "$1" ]; then
                    if [ -f "$1" ] && [ "$(stat -c '%u' $1)" -eq 0 ]; then
                        exec sudo -e $1
                    else
                        exec nvr --remote -p "$@"
                    fi
                else
                    exec nvr --remote -c ':terminal'
                fi
                ;;
        esac
    else
        # NVIM_LISTEN_ADDRESS=/tmp/nvimsocket exec nvim "$@"
        exec nvim "$@"
    fi
}

case $(file --mime-type -b "$1") in
    image/*)
        setsid gimp "$1"
        ;;
    video/*)
        hash kdenlive 2>/dev/null || {
            echo "Dude, install a video editor."
            exit 1
        }
        setsid kdenlive "$1"
        ;;
    application/zip)
        echo >&2 "warning: this is a zip file. here's what's in it though:"
        unzip -l $1
        # TODO: ask the user if they want to extract it
        ;;
    application/x-shockwave-flash | application/vnd.microsoft.portable-executable | application/x-pie-executable | application/*-executable | application/octet-stream)
        echo >&2 "warning: this is a binary. idk what to do here"
        ;;
    *) edit_with_nvim $@ ;;
esac
