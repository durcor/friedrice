# ~/.config/sway/config
#
# vi:ft=swayconfig
#
#                        `,:;*\ic\,    ``-'''''-
#                   `:rL7777l\;:::^?il77777777llr
#                 `>7777ir:'-:|l77777777777777l\:
#                 ,\|r:'   .il77777777777777li^,`
#                     ':;;` ;L7777777777777777li_
#             `:^: `;i77li'  w@>',:i7777ll\*;_'
#           `rlir. |77lL;` `u@w     `',,",,,
#            -`     ''.  ,]QQ>   `~^|c777ir~
#                     :FB@h; `:>il7777i:`  ``
#                 'LK@QS;  `,>9dOe=~'-':^\l7li'
#              ,FQ@Q@@QQQQ@@BKf*'   'L7777l/>:
#            rg@h^   `---`           -''-`
#          :B@1`
#         z@q`           `,;|v]SaSFv\^~`
#        \@B\takOdddKkEhKdddddddddddddddhh?:-
#   `"rlo@@Dddddddddddddddddddddddddddddddddd$j\;'
#  POOOdO@@OdddddddddddddddddddddddddddddddddddOOOK?
#  OOOOKOOOOddddddddddddddddddddddddddddddOOOOOKOOK/
#  ':|wwOOOOKOOOOOddddddddddddddddddOOOOOOOOOOqolr~`
#       `~r7ZKOOKKKOOOOdddddddddOOOOOOOOO$u\;'
#             ,;iSqKOOOKOOOOOOOKOOOOh]|:.
#                  ';\u6OOOOOOKez>:`
#                       .:?i^,`
#
include $HOME/.cache/wal/colors-sway

# font for window titles+status bar
font pango: "mononoki Nerd Font Mono" 11

set $mode-notif exec notify-send -h string:x-canonical-private-synchronous:i3mode -u low

# mouse + binding moves floating windows
floating_modifier Mod1

input * {
  xkb_capslock disable
  xkb_numlock disable
  xkb_layout "us,es"
  xkb_options "grp:alt_space_toggle,caps:escape"
  repeat_delay 135
  tap enabled
  repeat_rate 35
}

smart_borders off

# xwayland disable

output * {
  # max_render_time 1
  bg $wallpaper fill
}

output HDMI-A-1 pos 0 360 res 1920x1080
output HDMI-A-1 adaptive_sync off

output DP-3 pos 1920 0 res 2560x1440
output HDMI-A-1 adaptive_sync on

output eDP-1 pos 1000 1600 res 1920x1200
output DP-2 pos 0 0 res 3840x1600

# Manage the windows
mode manager {
    bindsym XF86AudioRaiseVolume exec pamixer --allow-boost -i 5
    bindsym F3 exec pamixer --allow-boost -i 5
    bindsym XF86AudioLowerVolume exec pamixer --allow-boost -d 5
    bindsym F1 exec pamixer --allow-boost -d 5
    bindsym XF86AudioMute exec pamixer -t
    bindsym F2 exec pamixer -t
    bindsym XF86AudioPrev exec mpc prev
    bindsym F5 exec mpc prev
    bindsym XF86AudioNext exec mpc next
    bindsym F7 exec mpc next
    bindsym XF86AudioPlay exec mpc toggle
    bindsym F6 exec mpc toggle
    # bindsym --release Print exec "maim -u -n 2 -s | xclip -se c -i"

    bindsym Return exec $TERMINAL

    # bindsym control+q exec "i3-nagbar -t warning -m 'exit i3?' -b 'yes' 'i3-msg exit'"
    bindsym q exec lockman
    bindsym shift+q exec lockman; exec sway output * dpms off
    bindsym control+q exec lockman; exec sudo systemctl suspend
    bindsym XF86Sleep exec lockman; exec sudo systemctl suspend
    # bindsym u exec "xclip -t -se p | xclip -i -s c"
    # bindsym slash exec dmenual -i -p run
    bindsym slash exec $TERMINAL --class float -e fzfexec; exec sway mode window
    bindsym shift+slash exec sway mode window; exec wofi -S run
    bindsym f exec $TERMINAL -e lf
    bindsym shift+p exec passmenu
    # TODO: make pasting intelligent using the file extension and falling back to mpv
    # Alternatively, I could make ANOTHER MODE for pasting (ex: 'pv' opens the clipboard in mpv.
    bindsym p mode paste; $mode-notif "PASTE MODE"
    bindsym y mode yank; $mode-notif "YANK MODE"
    bindsym n mode notify; $mode-notif "NOTIFY MODE"
    bindsym shift+n exec makoctl dismiss

    bindsym Menu [instance="pop"] scratchpad show; [instance="pop"] move position center

    bindsym x kill

    bindsym equal sticky toggle

    bindsym h focus left
    bindsym j focus down
    bindsym k focus up
    bindsym l focus right

    bindsym shift+h move left 60 px
    bindsym shift+j move down 60 px
    bindsym shift+k move up 60 px
    bindsym shift+l move right 60 px

    bindsym mod1+h move left 10 px
    bindsym mod1+j move down 10 px
    bindsym mod1+k move up 10 px
    bindsym mod1+l move right 10 px

    bindsym control+h move left 2 px
    bindsym control+j move down 2 px
    bindsym control+k move up 2 px
    bindsym control+l move right 2 px

    bindsym backslash split h ; exec notify-send -h string:x-canonical-private-synchronous:i3tiling -u low "HORIZONTAL TILING"
    bindsym minus split v ; exec notify-send -h string:x-canonical-private-synchronous:i3tiling -u low "VERTICAL TILING"

    bindsym b workspace prev
    bindsym w workspace next

    bindsym shift+b move container to workspace prev
    bindsym shift+w move container to workspace prev

    bindsym shift+equal fullscreen toggle

    # change container layout (stacked, tabbed, toggle split)
    bindsym s layout stacking
    bindsym t layout tabbed
    bindsym e layout toggle split

    bindsym less focus parent
    bindsym greater focus child

    # toggle tiling / floating
    bindsym shift+space floating toggle

    # change focus between tiling / floating windows
    bindsym space focus mode_toggle

    bindsym 1 workspace 1
    bindsym 2 workspace 2
    bindsym 3 workspace 3
    bindsym 4 workspace 4
    bindsym 5 workspace 5
    bindsym 6 workspace 6
    bindsym 7 workspace 7
    bindsym 8 workspace 8
    bindsym 9 workspace 9
    bindsym 0 workspace 10

    bindsym shift+1 move container to workspace 1
    bindsym shift+2 move container to workspace 2
    bindsym shift+3 move container to workspace 3
    bindsym shift+4 move container to workspace 4
    bindsym shift+5 move container to workspace 5
    bindsym shift+6 move container to workspace 6
    bindsym shift+7 move container to workspace 7
    bindsym shift+8 move container to workspace 8
    bindsym shift+9 move container to workspace 9
    bindsym shift+0 move container to workspace 10

    bindsym shift+c reload
    bindsym control+r reload

    bindsym i mode window; $mode-notif "WINDOW MODE"
    bindsym a mode window $mode-notif "WINDOW MODE"
    bindsym shift+a mode window; $mode-notif "WINDOW MODE"
    bindsym shift+i mode window; $mode-notif "WINDOW MODE"

    bindsym o mode launch; $mode-notif "LAUNCH MODE"
    bindsym g mode gaps; $mode-notif "GAPS MODE"
    bindsym m mode music; $mode-notif "MUSIC MODE"
    bindsym z mode audio; $mode-notif "AUDIO MODE"
    bindsym shift+colon [instance="pop"] mode window; scratchpad show; [instance="pop"] move position center
    bindsym r mode resize; $mode-notif "RESIZE MODE"
    bindsym v mode visual; $mode-notif "VISUAL MODE"
    bindsym shift+v exec grim > /tmp/grim.png
    bindsym c mode brightness; $mode-notif "BRIGHTNESS MODE"
}

# Interact with the highlighted window
mode window {
    bindsym Super_L mode manager; $mode-notif "MANAGER MODE"

    bindsym XF86AudioRaiseVolume exec pamixer --allow-boost -i 5; exec pkill -RTMIN+13 waybar
    bindsym XF86AudioLowerVolume exec pamixer --allow-boost -d 5; exec pkill -RTMIN+13 waybar
    bindsym XF86AudioMute exec pamixer -t; exec pkill -RTMIN+13 waybar
    bindsym XF86AudioStop exec playerctl stop
    bindsym XF86AudioPrev exec playerctl previous
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioPause exec playerctl play-pause
    bindsym XF86Search exec dmenual
    bindsym XF86Calculator exec $TERMINAL -e bc -ql
    bindsym XF86HomePage exec dmenual
    bindsym XF86Tools exec dmenual
    # bindsym --release Print exec "grim $(slurp) | wl-copy"
}

# Yank stuff to clipboard
mode yank {
    # bindsym p exec passmenu -p pass ; exec sway mode manager
    bindsym p exec $TERMINAL --class float -e fzfpw; exec sway mode window
    bindsym c exec clipmenu; exec sway mode manager

    bindsym Escape mode manager; exec $mode-notif "MANAGER MODE"
}

mode notify {
    bindsym x exec makoctl dismiss
    bindsym u exec makoctl restore
    bindsym d exec makoctl dismiss -a
    bindsym v exec makoctl menu
    bindsym shift+v exec makoctl invoke

    bindsym Escape mode manager; exec $mode-notif "MANAGER MODE"
}

# Paste stuff to programs
mode paste {
    bindsym v exec mpv "$(wl-paste)"; exec sway mode manager
    bindsym t exec $TERMINAL -e nvim "$(wl-paste)"; exec sway mode manager

    bindsym Escape mode manager; exec $mode-notif "MANAGER MODE"
}

bindsym Super_L mode manager; $mode-notif "MANAGER MODE"

# Resize the current window
# Relies on ~/bin/i3resize for intelligent resizing
mode resize {
    bindsym h exec i3resize left 20
    bindsym j exec i3resize down 20
    bindsym k exec i3resize up 20
    bindsym l exec i3resize right 20

    bindsym mod1+h exec i3resize left 10
    bindsym mod1+j exec i3resize down 10
    bindsym mod1+k exec i3resize up 10
    bindsym mod1+l exec i3resize right 10

    bindsym control+h exec i3resize left 1
    bindsym control+j exec i3resize down 1
    bindsym control+k exec i3resize up 1
    bindsym control+l exec i3resize right 1

    bindsym shift+h exec i3resize left 40
    bindsym shift+j exec i3resize down 40
    bindsym shift+k exec i3resize up 40
    bindsym shift+l exec i3resize right 40

    bindsym Escape mode manager; $mode-notif "MANAGER MODE"
}

# Change the gaps of all windows
mode gaps {
    bindsym h gaps inner current minus 5
    bindsym l gaps inner current plus 5
    bindsym j gaps outer current minus 5
    bindsym k gaps outer current plus 5

    bindsym Escape mode manager; $mode-notif "MANAGER MODE"
}

# Interact with mpris
mode music {
    bindsym h exec playerctl previous
    bindsym l exec playerctl next
    bindsym j exec playerctl position 5-
    bindsym k exec playerctl position 5-
    bindsym v exec mpdmenu
    bindsym z exec playerctl shuffle "On"
    bindsym space exec playerctl play-pause
    bindsym m mode mpd; $mode-notif "MPD MODE"

    bindsym Escape mode manager; $mode-notif "MANAGER MODE"
}

# Interact with mpd
mode mpd {
    bindsym h exec mpc prev
    bindsym l exec mpc next
    bindsym j exec mpc seek -5
    bindsym k exec mpc seek +5

    bindsym v exec notify-send "$(mpc)"
    bindsym z exec mpc random; exec notify-send -h string:x-canonical-private-synchronous:i3mpd -u low "$(mpc)"
    bindsym space exec mpc toggle

    bindsym Escape mode manager; exec $mode-notif "MANAGER MODE"
}

# Interact with pulseaudio
mode audio {
    bindsym h $ex pactl set-sink-volume @DEFAULT_SINK@ -1%; $ex pkill -RTMIN+13 waybar
    bindsym l $ex pactl set-sink-volume @DEFAULT_SINK@ +1%; $ex pkill -RTMIN+13 waybar
    bindsym j $ex pactl set-sink-volume @DEFAULT_SINK@ -5%; $ex pkill -RTMIN+13 waybar
    bindsym k $ex pactl set-sink-volume @DEFAULT_SINK@ +5%; $ex pkill -RTMIN+13 waybar
    bindsym shift+v $ex notify-send -u low "Volume is at $(pamixer --get-volume)%"
    bindsym v $ex $TERMINAL -e ncpamixer
    bindsym space $ex pactl set-sink-mute @DEFAULT_SINK@ toggle; $ex pkill -RTMIN+13 waybar

    bindsym Escape mode manager; $ex $mode-notif "MANAGER MODE"
}

# Launch programs
mode launch {
    bindsym t exec $TERMINAL
    bindsym n exec $TERMINAL -e newsboat
    bindsym w exec $GUIBROWSER
    bindsym g exec $TERMINAL --class float -e gameman play; exec sway mode window
    bindsym m exec $TERMINAL -e $MAILREADER
    bindsym c exec $TERMINAL -e $MUSICPLAYER -s visualizer
    bindsym v exec $TERMINAL -e $TASKMAN
    bindsym a exec $TERMINAL -e ncpamixer

    bindsym Escape mode manager; $mode-notif "MANAGER MODE"
}

# Select an area of the screen and convert it to an image
mode visual {
    bindsym s exec scrman
    bindsym c exec scrman cp
    bindsym u exec scrman up
    bindsym d exec scrman cp d 5

    bindsym Escape mode manager; $mode-notif "MANAGER MODE"
}

# Change the brightness of the screen
mode brightness {
    bindsym h exec backlightctl down 1
    bindsym l exec backlightctl up 1
    bindsym j exec backlightctl down 10
    bindsym k exec backlightctl up 10

    bindsym Escape mode manager ; $mode-notif "MANAGER MODE"
}

gaps inner 10
gaps outer 0

# window border width
default_border pixel 5
for_window [class="^.*"] border pixel 5

for_window [app_id="mpv"] floating enable
for_window [app_id="Pavucontrol"] floating enable
no_focus [app_id="mpv"]
no_focus [class="discord"]
# focus_on_window_activation urgent

# Primary Display
## General
# set $ws1 1 
## Games (Steam, Lutris, games)
# set $ws2 2 
assign [class="Steam"] 2
assign [class="Lutris"] 2
assign [title="Origin"] 2
for_window [title="Origin"] floating enable
## Photo-editing (GIMP)
# set $ws3 3 
## Chat (Discord)
# set $ws4 4 
## Terminals (htop, nvim, misc)
# set $ws5 5 

# Secondary Display
## General
# set $ws6 6 
## Game (Secondary)
# set $ws7 7 
## Music (Nicotine, vis, cava, ncmpcpp)
# set $ws8 8 
assign [class="nicotine"] 8
for_window [class="Spotify"] move to workspace 8
## Audio (ncpamixer)
# set $ws9 9 
## Terminals (htop, nvim, misc)
# set $ws10 10 

# for_window [instance="pop"] floating enable
# for_window [instance="pop"] resize set 900 600
# for_window [instance="pop"] move scratchpad
# for_window [instance="pop"] border pixel 10
# exec $terminal --class pop

for_window [instance="float"] floating enable

# class                 border  bg      txt     indicator child_border
client.focused          $color1 $color1 $color1 $color1   $color1
client.focused_inactive $color0 $color2 $color7 $color2   $color2
client.unfocused        $color0 $color6 $color6 $color6   $color6
client.urgent           $color0 $color2 $color8 $color2   $color2
client.placeholder      $color0 $color2 $color7 $color2   $color2

client.background       $color0

bar {
    swaybar_command waybar
}

exec $TERMINAL
exec $GUIBROWSER
exec librewolf
exec vesktop

exec nm-applet
# exec easyeffects
# exec 'wl-paste --watch clipman store'
# exec foot --server
exec 'cfg rf'

exec mako
exec_always '/usr/libexec/xdg-desktop-portal -r'
exec_always '/usr/libexec/xdg-desktop-portal-wlr -r'

exec 'killall -9 flashfocus; flashfocus'
exec 'spotifyd --no-daemon'
exec 'swayidle -w timeout 900 "lockman" timeout 900 "swaymsg output * dpms off" resume "swaymsg output * dpms on" before-sleep "lockman"'
exec_always sleep 3 & wait && setsid sway mode window

exec_always dbus-update-activation-environment --systemd DISPLAY
